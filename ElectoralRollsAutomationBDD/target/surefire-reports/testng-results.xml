<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="1" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-20T04:10:32 IST" name="ElectoralRolls Suite-1" finished-at="2023-04-20T04:10:42 IST" duration-ms="10209">
    <groups>
      <group name="cucumber">
        <method signature="RunCuke.scenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.RunCuke@4135c3b]" name="scenario" class="runner.RunCuke"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-04-20T04:10:32 IST" name="ElectoralRolls Test1" finished-at="2023-04-20T04:10:42 IST" duration-ms="10209">
      <class name="runner.RunCuke">
        <test-method is-config="true" signature="beforeSuiteAction()[pri:0, instance:runner.RunCuke@4135c3b]" started-at="2023-04-20T04:10:31 IST" name="beforeSuiteAction" finished-at="2023-04-20T04:10:32 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteAction -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:runner.RunCuke@4135c3b]" started-at="2023-04-20T04:10:32 IST" name="setUpClass" finished-at="2023-04-20T04:10:32 IST" duration-ms="638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="scenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.RunCuke@4135c3b]" started-at="2023-04-20T04:10:32 IST" name="scenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-04-20T04:10:41 IST" duration-ms="9132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User Flow for downloading voter roll"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User flow"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenario -->
        <test-method is-config="true" signature="close()[pri:0, instance:runner.RunCuke@4135c3b]" started-at="2023-04-20T04:10:41 IST" name="close" finished-at="2023-04-20T04:10:42 IST" duration-ms="329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.RunCuke@4135c3b]" started-at="2023-04-20T04:10:42 IST" name="tearDownClass" finished-at="2023-04-20T04:10:42 IST" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="extentflush()[pri:0, instance:runner.RunCuke@4135c3b]" started-at="2023-04-20T04:10:42 IST" name="extentflush" finished-at="2023-04-20T04:11:10 IST" duration-ms="28634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- extentflush -->
      </class> <!-- runner.RunCuke -->
    </test> <!-- ElectoralRolls Test1 -->
  </suite> <!-- ElectoralRolls Suite-1 -->
</testng-results>
